---
- name: Copy the resolv.conf template file
  when: is_dnsmasq_cache
  template: src=etc-resolv-dnsmasq.j2 dest=/etc/resolv.dnsmasq
  tags: [ 'configuration', 'dns' ]
  notify:
    - restart dnsmasq

- name: Install dnsmasq if needed
  when: ansible_os_family == 'Debian' and is_dnsmasq_cache
  apt: name=dnsmasq state=present

- name: Yum install dnsmasq if needed
  when: ansible_os_family == 'RedHat' and is_dnsmasq_cache
  yum: name=dnsmasq state=present

- name: Install dnsmasq if needed
  when: ansible_os_family == 'Debian' and is_dnsmasq_cache
  lineinfile: >
    dest=/etc/default/dnsmasq
    regexp="^IGNORE_RESOLVCONF.*"
    line="IGNORE_RESOLVCONF=yes"

- name: Install dnsmasq if needed
  when: ansible_os_family == 'Debian' and is_dnsmasq_cache
  lineinfile: >
    dest=/etc/default/dnsmasq
    regexp="^IGNORE_RESOLVCONF.*"
    line="IGNORE_RESOLVCONF=yes"
  notify:
    - restart dnsmasq

- name: TEMPLATE /etc/dnsmasq
  when: is_dnsmasq_cache
  template: >
    src=etc-dnsmasq.conf.j2
    dest=/etc/dnsmasq.conf
    owner=root
    group=root
    mode=0644
  notify:
    - restart dnsmasq

- meta: flush_handlers

- name: SERVICE dnsmasq start
  when: is_dnsmasq_cache
  service: name=dnsmasq state=started


################################################################################
- name: REMOVE DNS in interface config
  when: ansible_os_family == 'RedHat' or ansible_os_family == "CentOS"
  lineinfile: >
    dest=/etc/sysconfig/network-scripts/ifcfg-{{ item }}
    regexp="^DNS[0-9]=.*"
    state=absent
    create=no
  ignore_errors: yes
  with_items:
    - eth0
    - eth1
    - eth2

- name: Copy the resolv.conf template file
  template: src=etc-resolv-conf.j2 dest=/etc/resolv.conf
  tags: [ 'configuration', 'dns' ]

- meta: flush_handlers
# vim:ft=ansible:
